<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="50000000" />
		<property name="uploadTempDir" ref="uploadDirResource" />
	</bean>

	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"> -->
	<!-- one of the properties available; the maximum file size in bytes 2MB -->
	<!-- <property name="maxUploadSize" value="2000000"/> -->
	<!-- </bean> -->

	<!-- Configure the file upload directory -->
	<bean id="uploadDirResource"
		class="org.springframework.core.io.FileSystemResource">
		<constructor-arg>
			<value>C:/Temp/</value>
		</constructor-arg>
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
		<property name="url" value="jdbc:oracle:thin:@49.247.26.104:1521:xe" />
		<property name="username" value="team04" />
		<property name="password" value="joyking" />
	</bean>
	
	<!-- 메일 -->
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
       <property name="host" value="smtp.naver.com" />
       <property name="port" value="465" />
       <property name="username" value="zordstyle" />
       <property name="password" value="1U4S6N7E2B8Z" />
       <property name="defaultEncoding" value="utf-8" />
       <property name="javaMailProperties">
       		<props>
       			<prop key="mail.debug">true</prop>
       			<prop key="mail.smtp.starttls.enable">true</prop>
       			<prop key="mail.smtp.ssl.enable">true</prop>
       			<prop key="mail.smtps.ssl.checkserveridentity">true</prop>
       			<prop key="mail.smtp.auth">true</prop>
       			<prop key="mail.smtps.ssl.trust">*</prop>
       			<prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSockeyFactory</prop>
       		</props>
       </property>
   </bean>
   
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation"
			value="classpath:/mybatis-config.xml" />
	</beans:bean>

	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" destroy-method="clearCache">
		<beans:constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" />
	</beans:bean>
	<!-- 트랜잭션 관리자 -->
	<!-- 위의 트랜잭션 어노테이션 처리할때 이름을 transactionManager로 설정하면 다음 코드를 쓸 필요 없다. -->
	<beans:bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<!-- Transaction의 대상이 되는 메소드를 정의한다 -->
			<tx:method name="select*" read-only="true" rollback-for="Exception" />
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="delete*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

<!-- 	<aop:config> proxy-target-class="true"
		<aop:pointcut id="txAdvisePointCut"
			expression="execution(* com.mvc..impl.*Impl.*(..))" />
		<aop:advisor pointcut-ref="txAdvisePointCut"
			advice-ref="txAdvice" />
	</aop:config> -->
<!-- 	<aop:config proxy-target-class="true">
		<aop:pointcut id="daoMethod"
			expression="execution(* com.on..*Impl.*(..)))" />
	<aop:pointcut id="daoMethod"
			expression="execution(* com.on..*Impl.*(..)))" />			
		<aop:advisor id="transactionAdvisor"
			pointcut-ref="daoMethod" advice-ref="txAdvice" />
	</aop:config> -->
</beans>
